public with sharing class WeekFiveHomework {

//Let's practice calling different methods by writing our very own methods. You will write and save methods in the space below
//Note: There are existing pre-written methods at the bottom of this class that you can use to help with your own methods. Ready? Let's go!


//Sample: Here is a public method that calls the getCitiesForExpansion below and prints the results to our debug log
public static void printOutCitiesForExpansionDemo() {
    //The code on the left of the equals sign instantiates a list of Strings, the code on the right side calls our method and returns a list of cities
    //the equals sign assigns the returned value, to the list we created
    List<String> cities = getCitiesForExpansion();
    System.debug('Here are the cities: ' + cities);
}


//1.  Write a public method that calls the getCitiesForExpansion method to get a list of cities, then add
//another city to the list before printing it to the debug log.
//(see the sample above for an example of calling that method-You can even start by copying and pasting that method here, renaming and modifying it)
public static void printOutCitiesForExpansion() {
//Call getCitiesForExpansion to get the list of cities
List cities = getCitiesForExpansion();

//Add another city (e.g., Austin) to the list
cities.add("Austin");

//Print the modified list with the added city
System.debug('Here are the cities for expansion: ' + cities);
}

//2.Write a public method that calls the isTopSalesCity method and prints out the returned boolean to the debug log.
//You'll need to pass in a string variable that is a city name as the argument!
public static void printIsTopSalesCity(String cityName) {
// Call isTopSalesCity to check if the city is a top sales city
boolean isTopCity = isTopSalesCity(cityName);

// Return the city and result
System.debug('Is ' + cityName + ' a top sales city: ' + isTopCity);
}

//3.  BONUS!!  If you've finished the first two, there's another public method below that will return the top 10 Accounts
//Write a public method that calls getTopTenAccounts.  Can you loop through those accounts and change the name of those accounts with a DML Update?
public static void updateTopAccountNames() {
// Get the top 10 accounts
List topAccounts = getTopTenAccounts();

// Loop through each account
for (Account account : topAccounts) {
// Update the name with ( Top 10 - ')
account.Name = 'Top 10 - ' + account.Name;
}

// Perform DML update to apply the changes to the database
update topAccounts;
}

//4.  BONUS!! Can you write a SOQL query that will return all opportunities for toptenAccounts based on Annual Revenue 
//Hint:  If you're stuck, look back a the code in ClassExercises, getOpenOppsForHotAccounts method
//  Print your results in the debug log.
SELECT Id, Name, Stage, CloseDate, Amount
FROM Opportunity
WHERE AccountId IN (
SELECT Id
FROM Account
ORDER BY AnnualRevenue DESC
LIMIT 10)
ORDER BY Amount DESC;

// Pre-Written methods below this point that you can call

//no arguments taken, will return the same thing every time
public static List<String> getCitiesForExpansion() {
    List<String> cities = new List<String>();

    cities.add('Tokyo');
    cities.add('Melbourne');
    cities.add('Portland');

    //this is the line that sends our final product out to whatever method called this one
    return cities;
}


//takes a string argument and returns a boolean, based on that input
public static Boolean isTopSalesCity (String cityName) {
    if (cityName=='Seattle' || cityName=='Los Angeles' || cityName=='Portland') {
        return true;
    } else {
        return false;
    }
}
